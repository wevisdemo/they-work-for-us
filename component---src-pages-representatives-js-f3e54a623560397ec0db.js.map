{"version":3,"file":"component---src-pages-representatives-js-f3e54a623560397ec0db.js","mappings":"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","sources":["webpack://they-work-for-us/./src/components/partyGroupList.js","webpack://they-work-for-us/./src/components/partyLogo.js","webpack://they-work-for-us/./src/components/peopleAvatar.js","webpack://they-work-for-us/./src/components/peopleCardMini.js","webpack://they-work-for-us/./src/pages/representatives.js","webpack://they-work-for-us/./node_modules/lodash/_arrayAggregator.js","webpack://they-work-for-us/./node_modules/lodash/_baseAggregator.js","webpack://they-work-for-us/./node_modules/lodash/_baseAssignValue.js","webpack://they-work-for-us/./node_modules/lodash/_createAggregator.js","webpack://they-work-for-us/./node_modules/lodash/_defineProperty.js","webpack://they-work-for-us/./node_modules/lodash/groupBy.js","webpack://they-work-for-us/./node_modules/lodash/mapValues.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport _ from \"lodash\"\nimport PartyLogo from \"./partyLogo\"\n\nconst cssMPColumn = {\n  display: \"block\",\n  padding: \"2rem\",\n  margin: \"0 1rem\",\n  a: {\n    color: \"var(--cl-black)\",\n  },\n  h3: {\n    textAlign: \"left\",\n    fontSize: \"3.2rem\",\n    padding: \"2rem\",\n  },\n  img: {\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n  },\n}\n\nconst PartyGroupList = ({ paneHeaderStyle }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      partyCoalition: allPeopleYaml(\n        filter: {\n          party_group: { eq: \"ร่วมรัฐบาล\" }\n          is_mp: { eq: true }\n          is_active: { eq: true }\n        }\n      ) {\n        totalCount\n      }\n      partyOpposition: allPeopleYaml(\n        filter: {\n          party_group: { eq: \"ฝ่ายค้าน\" }\n          is_mp: { eq: true }\n          is_active: { eq: true }\n        }\n      ) {\n        totalCount\n      }\n      mpParty: allPeopleYaml(\n        filter: { is_mp: { eq: true }, is_active: { eq: true } }\n      ) {\n        edges {\n          node {\n            party\n          }\n        }\n      }\n      allPartyYaml(\n        filter: { party_type: { eq: \"พรรค\" }, is_active: { eq: true } }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            name\n            party_group\n            images {\n              url\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  // Get active member count of each party\n  const activeMpByParty = _.mapValues(\n    _.groupBy(data.mpParty.edges.map(({ node }) => node.party)),\n    list => list.length\n  )\n\n  function totalActiveMember(partyName) {\n    return activeMpByParty[partyName] || 0\n  }\n\n  // sort by more members first, then alphabetically\n  const getSortedParties = partyGroup => {\n    let members = data.allPartyYaml.edges.filter(\n      ({ node }) =>\n        node.party_group === partyGroup && totalActiveMember(node.name)\n    )\n    members.sort(({ node: a }, { node: b }) => {\n      const totalDiff = totalActiveMember(b.name) - totalActiveMember(a.name)\n      return totalDiff !== 0 ? totalDiff : a.name.localeCompare(b.name, \"th\")\n    })\n    return members\n  }\n\n  const PartyListItem = ({ node }) => (\n    <Link\n      to={node.fields.slug}\n      style={{\n        fontSize: \"2.2rem\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        marginBottom: \"0.5rem\",\n      }}\n    >\n      <PartyLogo {...node} />\n      <p style={{ margin: \"auto 10px\" }}>\n        {node.name} ({totalActiveMember(node.name)})\n      </p>\n    </Link>\n  )\n\n  return (\n    <div\n      css={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"flex-start\",\n        flexWrap: \"wrap\",\n        marginTop: \"2rem\",\n      }}\n    >\n      <div css={cssMPColumn}>\n        <h3 style={{ ...paneHeaderStyle }}>\n          พรรคร่วมรัฐบาล ({data.partyCoalition.totalCount} คน)\n        </h3>\n        <ul>\n          {getSortedParties(\"ร่วมรัฐบาล\").map(({ node }) => (\n            <PartyListItem node={node} key={node.name} />\n          ))}\n        </ul>\n      </div>\n      <div css={cssMPColumn}>\n        <h3 style={{ ...paneHeaderStyle }}>\n          พรรคฝ่ายค้าน ({data.partyOpposition.totalCount} คน)\n        </h3>\n        <ul>\n          {getSortedParties(\"ฝ่ายค้าน\").map(({ node }) => (\n            <PartyListItem node={node} key={node.name} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default PartyGroupList\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PartyLogo = ({ name, images }) => {\n  const { placeholderImage } = useStaticQuery(graphql`\n    {\n      placeholderImage: file(\n        relativePath: { eq: \"images/party/placeholder.jpg\" }\n      ) {\n        childImageSharp {\n          gatsbyImageData(width: 45)\n        }\n      }\n    }\n  `)\n\n  if (images?.[0]?.url) {\n    return (\n      <img\n        src={images[0]?.url}\n        alt={name}\n        style={{ width: \"100%\", maxWidth: 45 }}\n      />\n    )\n  }\n\n  return (\n    <GatsbyImage\n      image={placeholderImage.childImageSharp.gatsbyImageData}\n      alt={name}\n    />\n  )\n}\n\nexport default PartyLogo\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PeopleAvatar = ({ title = \"\", name, lastname, images }) => {\n  const { placeholderImage } = useStaticQuery(graphql`\n    {\n      placeholderImage: file(\n        relativePath: { eq: \"images/people/placeholder.png\" }\n      ) {\n        childImageSharp {\n          gatsbyImageData(width: 160)\n        }\n      }\n    }\n  `)\n\n  const alt = title ? `${title} ${name} ${lastname}` : `${name} ${lastname}`\n\n  if (images?.[0]?.url) {\n    return (\n      <img\n        src={images[0]?.url}\n        alt={alt}\n        style={{ pointerEvents: \"none\", margin: 0 }}\n      />\n    )\n  }\n\n  return (\n    <div className=\"avatar\">\n      <GatsbyImage\n        image={placeholderImage.childImageSharp.gatsbyImageData}\n        alt={alt}\n        style={{ pointerEvents: \"none\" }}\n      />\n    </div>\n  )\n}\n\nexport default PeopleAvatar\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport PeopleAvatar from \"./peopleAvatar\"\n\nconst MPInfo = props => (\n  <div\n    css={{\n      fontFamily: \"var(--ff-text)\",\n      fontWeight: \"bold\",\n      fontSize: \"1.6rem\",\n      a: { color: \"inherit\" },\n      verticalAlign: \"center\",\n      height: \"100%\",\n    }}\n  >\n    <Link to={props.fields.slug}>{`${props.name} ${props.lastname}`}</Link>\n  </div>\n)\n\nconst PeopleCardMini = props => {\n  const peopleInfo = MPInfo(props)\n\n  return (\n    <div\n      key={props.id}\n      className={props.className}\n      css={{\n        display: \"block\",\n        flex: \"1 1 360px\",\n        fontSize: \"1.8rem\",\n        marginBottom: \"2rem\",\n      }}\n    >\n      <div style={{ marginBottom: \"1rem\", fontWeight: \"medium\" }}>\n        {props.position}\n      </div>\n      <div>\n        <Link to={props.fields.slug}>\n          <div\n            className=\"profile-picture\"\n            css={{\n              borderRadius: 84,\n              width: 41,\n              height: 41,\n              float: \"left\",\n              marginBottom: 0,\n              marginRight: \"1rem\",\n              border: \"2px solid var(--cl-black)\",\n              background: \"var(--cl-gray-2) no-repeat\",\n              backgroundSize: \"cover\",\n              overflow: \"hidden\",\n            }}\n          >\n            <PeopleAvatar {...props} />\n          </div>\n        </Link>\n      </div>\n      <div style={{ marginTop: \"2rem\" }}>{peopleInfo}</div>\n    </div>\n  )\n}\n\nexport default PeopleCardMini\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport {\n  loadCategoryStats,\n  joinPeopleVotelog,\n  peopleSlug,\n  formatOrdinalNumber,\n} from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PartyGroupList from \"../components/partyGroupList\"\nimport VoteLogCard from \"../components/voteLogCard\"\nimport CardGrid from \"../components/cardGrid\"\n\nimport \"../styles/profile-book.css\"\n\nconst VOTE_LIMIT = 6\n\nexport const query = graphql`\n  {\n    house: partyYaml(party_type: { eq: \"สส\" }, is_active: { eq: true }) {\n      name\n      party_ordinal\n      description\n      established_date\n      dissolved_date\n      speaker\n      first_deputy_speaker\n      second_deputy_speaker\n      whip\n      opposition_leader\n      website\n      facebook\n      twitter\n      is_active\n    }\n    allPeopleYaml(filter: { is_mp: { eq: true }, is_active: { eq: true } }) {\n      totalCount\n      edges {\n        node {\n          yamlId\n          name\n          lastname\n          images {\n            url\n          }\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: { mp_type: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: { gender: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: { education: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      group(field: { occupation_group: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: { is_mp: { eq: true }, is_active: { eq: true } }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(\n      filter: { is_active: { eq: true } }\n      sort: { vote_date: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          yamlId\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          yamlId\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst RepresentativesPage = props => {\n  const { house, ...data } = props.data\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"speaker\",\n        label: \"ประธานสภา\",\n      },\n      {\n        name: \"first_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 1\",\n      },\n      {\n        name: \"second_deputy_speaker\",\n        label: \"รองประธานสภา คนที่ 2\",\n      },\n      {\n        name: \"whip\",\n        label: \"ผู้นำฝ่ายรัฐบาล\",\n      },\n      {\n        name: \"opposition_leader\",\n        label: \"ผู้นำฝ่ายค้าน\",\n      },\n    ].map((keyPos, id) => {\n      if (!house[keyPos.name]) return null\n      const nameParts = house[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      const { images } = data.allPeopleYaml.edges.find(\n        ({ node }) => node.name === name && node.lastname === lastname\n      ).node\n\n      return { id, name, lastname, position, fields: { slug }, images }\n    })\n  )\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml,\n    VOTE_LIMIT\n  )\n\n  return (\n    <Layout pageStyles={{ background: \"#eeeeee\" }}>\n      <Seo title=\"สมาชิกสภาผู้แทนราษฎรไทย\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>\n              {house.name} ชุดที่ {house.party_ordinal}\n            </h1>\n            <h2 style={{ ...cssEngTitle }}>\n              <span\n                dangerouslySetInnerHTML={{\n                  __html: formatOrdinalNumber(house.party_ordinal),\n                }}\n              />{\" \"}\n              House of Representative\n            </h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{house.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...house}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...house}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฏรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section css={{ ...cssSection, background: \"var(--cl-white)\" }}>\n          <div className=\"container\">\n            <h2 css={{ ...cssH1 }}>การลงมติล่าสุดของสภาผู้แทนราษฎร</h2>\n            <CardGrid>\n              {votelogs.map(({ id, fields, ...voteLog }) => (\n                <VoteLogCard\n                  isCompact\n                  key={id}\n                  slug={fields.slug}\n                  {...voteLog}\n                />\n              ))}\n            </CardGrid>\n          </div>\n        </section>\n      ) : null}\n\n      <section css={{ ...cssSection, background: \"#eeeeee\" }}>\n        <div className=\"container\">\n          <div>\n            <h3\n              css={{\n                fontSize: \"4.5rem\",\n                textAlign: \"center\",\n                marginTop: \"4rem\",\n              }}\n            >\n              สำรวจตามพรรคการเมือง\n            </h3>\n            <PartyGroupList />\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default RepresentativesPage\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;\n"],"names":["cssMPColumn","display","padding","margin","a","color","h3","textAlign","fontSize","img","borderRadius","verticalAlign","paneHeaderStyle","data","useStaticQuery","activeMpByParty","mpParty","edges","map","node","party","list","length","totalActiveMember","partyName","getSortedParties","partyGroup","members","allPartyYaml","filter","party_group","name","sort","b","totalDiff","localeCompare","PartyListItem","Link","to","fields","slug","style","flexDirection","marginBottom","css","partyCoalition","totalCount","key","partyOpposition","images","placeholderImage","url","src","alt","width","maxWidth","G","image","childImageSharp","gatsbyImageData","title","lastname","pointerEvents","className","props","peopleInfo","MPInfo","id","fontWeight","position","marginTop","cssH1","cssSection","paddingTop","paddingBottom","h2","cssEngTitle","cssPageP","cssBarChart","house","mp_type","gender","age","education","occupation_group","asset","loadCategoryStats","keyMembers","label","keyPos","nameParts","split","slice","peopleSlug","join","allPeopleYaml","find","votelogs","joinPeopleVotelog","allPeopleVoteYaml","allVotelogYaml","pageStyles","background","party_ordinal","dangerouslySetInnerHTML","__html","formatOrdinalNumber","description","x","fontFamily","voteLog","isCompact","module","exports","array","setter","iteratee","accumulator","index","value","baseEach","collection","defineProperty","object","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","func","getNative","Object","e","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","result","call","push","baseForOwn"],"sourceRoot":""}