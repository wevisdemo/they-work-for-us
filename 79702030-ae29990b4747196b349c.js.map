{"version":3,"file":"79702030-ae29990b4747196b349c.js","mappings":"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","sources":["webpack://they-work-for-us/./src/templates/people-template.js"],"sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { formatNumber, ageFromBirthdate } from \"../utils\"\nimport ExternalLink from \"../components/externalLink\"\nimport OfficialWebsite from \"../components/profile/officialWebsite\"\nimport PeopleVote from \"../components/peopleVote\"\nimport PeopleStatus from \"../components/peopleStatus\"\n\nimport { hr } from \"./people-template.module.css\"\nimport \"../styles/profile-book.css\"\nimport PeopleAvatar from \"../components/peopleAvatar\"\n\nexport const query = graphql`\n  query($slug: String!, $name: String!, $lastname: String!, $party: String!) {\n    person: peopleYaml(fields: { slug: { eq: $slug } }) {\n      yamlId\n      title\n      name\n      lastname\n      gender\n      birthdate\n      education\n      graduation\n      degree\n      ex_occupation\n      cabinet_position\n      is_cabinet\n      is_senator\n      is_mp\n      is_active\n      mp_type\n      mp_province\n      mp_zone\n      mp_list\n      vote\n      senator_method\n      party\n      asset\n      facebook\n      twitter\n      people_party_history {\n        established_date\n        party {\n          name\n        }\n      }\n      images {\n        url\n      }\n    }\n    peopleVoteYaml(name: { eq: $name }, lastname: { eq: $lastname }) {\n      votelog {\n        key\n        value\n      }\n    }\n    partyYaml(name: { eq: $party }) {\n      color\n    }\n    allVotelogYaml(filter: { is_active: { eq: true } }) {\n      nodes {\n        yamlId\n        fields {\n          slug\n        }\n        title\n        description_th\n        legal_title\n        vote_date\n      }\n    }\n    infoImage: file(relativePath: { eq: \"images/icons/info/info.png\" }) {\n      childImageSharp {\n        gatsbyImageData(height: 24, layout: FIXED)\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssH2 = { fontSize: \"2.4rem\" }\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\nconst cssSectionBlack = {\n  ...cssSection,\n  color: \"var(--cl-white)\",\n  background: \"var(--cl-black)\",\n  h2: {\n    ...cssSection.h2,\n    color: \"var(--cl-white)\",\n  },\n  blockquote: {\n    color: \"var(--cl-white)\",\n    lineHeight: 1.8,\n    border: \"none\",\n    fontSize: \"3.6rem\",\n    fontStyle: \"normal\",\n    fontFamily: \"var(--ff-title)\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssRightPage = {\n  fontSize: \"1.8rem\",\n  p: {\n    marginBottom: \"1rem\",\n  },\n  a: {\n    color: \"var(--cl-black)\",\n    textDecoration: \"underline\",\n  },\n  \".official-website a\": {\n    textDecoration: \"none\",\n  },\n}\n\nconst MPParty = ({ person, partyHistory }) => {\n  if (!person.is_mp) return null\n\n  return (\n    <div>\n      <p css={{ fontWeight: \"bold\" }}>\n        {person.party ? (\n          <Link to={`/party/${person.party}`}>พรรค {person.party}</Link>\n        ) : (\n          \"ไม่สังกัดพรรค\"\n        )}\n      </p>\n      {partyHistory.length > 1 && (\n        <div css={{ fontSize: 14, color: \"var(--cl-gray-1)\" }}>\n          พรรคที่เคยสังกัด :\n          <ul css={{ marginLeft: 0, marginBottom: \"1rem\" }}>\n            {partyHistory.slice(1).map(({ partyName, dateRange }, i) => (\n              <li key={i} css={{ listStyle: \"none\" }}>\n                <strong>{partyName}</strong> (\n                {dateRange\n                  .map(date =>\n                    new Date(date).toLocaleDateString(\"TH-th\", {\n                      dateStyle: \"medium\",\n                    })\n                  )\n                  .join(\" - \")}\n                )\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nconst PersonAffiliation = person => (\n  <div>\n    {!person.is_cabinet ? null : (\n      <p css={{ fontWeight: \"bold\" }}>คณะรัฐมนตรี</p>\n    )}\n\n    {!person.is_senator ? null : (\n      <p css={{ fontWeight: \"bold\" }}>สมาชิกวุฒิสภา {person.senator_method}</p>\n    )}\n\n    {!person.is_mp ? null : person.mp_type === \"แบ่งเขต\" ? (\n      <p css={{ fontWeight: \"bold\" }}>\n        สมาชิกสภาผู้แทนราษฎร แบ่งเขต จังหวัด {person.mp_province}\n        เขต {person.mp_zone} จากคะแนนโหวต {formatNumber(person.vote)} คะแนน\n      </p>\n    ) : (\n      <p css={{ fontWeight: \"bold\" }}>\n        สมาชิกสภาผู้แทนราษฎร บัญชีรายชื่อ ลำดับที่ {person.mp_list}\n      </p>\n    )}\n  </div>\n)\n\nconst PersonPosition = person => (\n  <div css={{ fontSize: \"1.4rem\" }}>\n    {person.cabinet_position.length > 0 ? (\n      <p>\n        {person.cabinet_position.map((pos, i) => (\n          <span key={pos}>\n            {i > 0 && \", \"}\n            {pos}{\" \"}\n          </span>\n        ))}\n      </p>\n    ) : null}\n  </div>\n)\n\nconst PersonRecord = person => (\n  <p>\n    <span>\n      <strong>เพศ</strong> {person.gender}\n    </span>{\" \"}\n    <span>\n      <strong>อายุ</strong> {ageFromBirthdate(person.birthdate)} ปี\n    </span>{\" \"}\n    <span>\n      <strong>การศึกษา</strong> {person.education}\n    </span>{\" \"}\n    <span>\n      {person.graduation}\n      {person.degree ? ` (${person.degree})` : null}\n    </span>{\" \"}\n    <span>\n      <strong>อาชีพเดิม</strong> {person.ex_occupation}\n    </span>\n  </p>\n)\n\nconst LinkPoliticsAndBusiness = (name, lastname, party) => {\n  return (\n    <ExternalLink\n      href={`https://elect.in.th/politics-and-business/#/p/${party}/person/${name} ${lastname}`}\n    >\n      <strong>ตรวจสอบประวัติทางธุรกิจ</strong>\n    </ExternalLink>\n  )\n}\n\nconst PersonFinance = person => (\n  <p>\n    <span>\n      <strong>ทรัพย์สิน</strong>{\" \"}\n      {person.asset === null\n        ? \"ไม่มีข้อมูล\"\n        : `${formatNumber(person.asset, 2)} บาท`}\n    </span>{\" \"}\n    <span>\n      <strong>หนี้สิน</strong>{\" \"}\n      {/* \n            'debt' is always null from data source (NocoDB) which caused error on this page query.\n            Re-enable the query above once debt has some level of availability.\n        */\n      person.debt === null || person.debt === undefined\n        ? \"ไม่มีข้อมูล\"\n        : `${formatNumber(person.debt, 2)} บาท`}\n    </span>{\" \"}\n    {person.mp_type !== \"\" &&\n      LinkPoliticsAndBusiness(person.name, person.lastname, person.party)}\n  </p>\n)\n\nconst PeoplePage = props => {\n  const {\n    person,\n    peopleVoteYaml,\n    partyYaml,\n    allVotelogYaml,\n    ...data\n  } = props.data\n\n  const pageBGColor = partyYaml !== null ? partyYaml.color : \"var(--cl-gray-4)\"\n  const personFullName = `${person.title} ${person.name} ${person.lastname}`\n\n  const partyHistory = person.people_party_history\n    .sort((a, z) => z.established_date.localeCompare(a.established_date))\n    .map(({ party, established_date }, i) => ({\n      partyName: party?.name,\n      dateRange: [\n        established_date,\n        i > 0\n          ? person.people_party_history[i - 1].established_date\n          : new Date(),\n      ],\n    }))\n    .filter(({ partyName }) => partyName)\n\n  return (\n    <Layout\n      pageStyles={{\n        background: pageBGColor,\n      }}\n    >\n      <Seo title={personFullName} imageUrl=\"/seo/share/people.png\" />\n\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <div css={{ textAlign: \"center\", marginTop: \"5rem\" }}>\n              <div\n                css={{\n                  height: 160,\n                  width: 160,\n                  borderRadius: 80,\n                  margin: \"0 auto\",\n                  overflow: \"hidden\",\n                  marginBottom: 20,\n                }}\n              >\n                <PeopleAvatar {...person} />\n              </div>\n              <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>{personFullName}</h1>\n              <PeopleStatus isActive={person.is_active} />\n            </div>\n          </div>\n          <div className=\"page\" css={cssRightPage}>\n            <h2 css={{ ...cssH2, marginTop: \"1rem\", textAlign: \"center\" }}>\n              <GatsbyImage\n                image={data.infoImage.childImageSharp.gatsbyImageData}\n                alt=\"\"\n                aria-hidden=\"true\"\n                style={{\n                  verticalAlign: \"bottom\",\n                  margin: \"0 0.8rem\",\n                  display: \"inline-block\",\n                }}\n              />\n              ข้อมูลพื้นฐาน\n            </h2>\n            <hr className={hr} />\n            <MPParty person={person} partyHistory={partyHistory}></MPParty>\n            <PersonAffiliation {...person}></PersonAffiliation>\n            <PersonPosition {...person}></PersonPosition>\n\n            <hr className={hr} />\n\n            <PersonRecord {...person}></PersonRecord>\n\n            <hr className={hr} />\n\n            <PersonFinance {...person}></PersonFinance>\n\n            <hr className={hr} />\n\n            <h2 css={{ ...cssEngTitle }}>Official Website</h2>\n            <OfficialWebsite {...person}></OfficialWebsite>\n          </div>\n        </div>\n      </section>\n\n      {peopleVoteYaml && (\n        <PeopleVote\n          peopleVoteYaml={peopleVoteYaml}\n          allVotelogYaml={allVotelogYaml}\n          partyHistory={partyHistory}\n        />\n      )}\n    </Layout>\n  )\n}\n\nexport default PeoplePage\n"],"names":["cssH1","fontSize","cssH2","cssSection","paddingTop","paddingBottom","h2","textAlign","cssEngTitle","margin","cssRightPage","p","marginBottom","a","color","textDecoration","MPParty","person","partyHistory","is_mp","css","party","Link","to","length","slice","map","i","partyName","dateRange","key","date","Date","toLocaleDateString","dateStyle","join","PersonAffiliation","is_cabinet","is_senator","senator_method","mp_type","mp_province","mp_zone","formatNumber","vote","mp_list","PersonPosition","cabinet_position","pos","PersonRecord","gender","ageFromBirthdate","birthdate","education","graduation","degree","ex_occupation","PersonFinance","asset","debt","undefined","name","lastname","href","props","peopleVoteYaml","partyYaml","allVotelogYaml","data","pageBGColor","personFullName","title","people_party_history","sort","z","established_date","localeCompare","filter","pageStyles","background","imageUrl","className","isActive","is_active","marginTop","G","image","infoImage","childImageSharp","gatsbyImageData","alt","style","verticalAlign","display","hr"],"sourceRoot":""}