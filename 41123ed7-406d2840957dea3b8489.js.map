{"version":3,"file":"41123ed7-406d2840957dea3b8489.js","mappings":"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","sources":["webpack://they-work-for-us/./src/templates/party-template.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport _ from \"lodash\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { loadCategoryStats, joinPeopleVotelog, peopleSlug } from \"../utils\"\nimport StackedBarChart from \"../components/stackedBarChart\"\nimport { OfficialWebsite, InOfficeDate } from \"../components/profile\"\nimport PeopleCardMini from \"../components/peopleCardMini\"\nimport PeopleCard from \"../components/peopleCard\"\nimport VoteLogCard from \"../components/voteLogCard\"\nimport ArrowDownOutlined from \"@ant-design/icons/ArrowDownOutlined\"\n\nimport \"../styles/profile-book.css\"\n\nexport const query = graphql`\n  query($slug: String!, $party: String!) {\n    party: partyYaml(\n      party_type: { eq: \"พรรค\" }\n      fields: { slug: { eq: $slug } }\n    ) {\n      yamlId\n      name\n      en {\n        name\n      }\n      description\n      established_date\n      dissolved_date\n      color\n      party_group\n      party_leader\n      party_secretary\n      website\n      facebook\n      twitter\n      is_active\n    }\n    allPeopleYaml(filter: { is_mp: { eq: true }, party: { eq: $party } }) {\n      totalCount\n      edges {\n        node {\n          yamlId\n          fields {\n            slug\n          }\n          title\n          name\n          lastname\n          party\n          party_group\n          mp_type\n          mp_province\n          mp_zone\n          mp_list\n          is_active\n        }\n      }\n    }\n    mp_type: allPeopleYaml(\n      filter: { is_mp: { eq: true }, party: { eq: $party } }\n    ) {\n      group(field: { mp_type: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    gender: allPeopleYaml(\n      filter: { is_mp: { eq: true }, party: { eq: $party } }\n    ) {\n      group(field: { gender: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    education: allPeopleYaml(\n      filter: { is_mp: { eq: true }, party: { eq: $party } }\n    ) {\n      group(field: { education: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    occupation_group: allPeopleYaml(\n      filter: { is_mp: { eq: true }, party: { eq: $party } }\n    ) {\n      group(field: { occupation_group: SELECT }) {\n        value: totalCount\n        name: fieldValue\n      }\n    }\n    age: allPeopleYaml(filter: { is_mp: { eq: true }, party: { eq: $party } }) {\n      edges {\n        node {\n          birthdate\n        }\n      }\n    }\n    asset: allPeopleYaml(\n      filter: { is_mp: { eq: true }, party: { eq: $party } }\n    ) {\n      edges {\n        node {\n          asset\n        }\n      }\n    }\n    allVotelogYaml(sort: { vote_date: DESC }) {\n      totalCount\n      edges {\n        node {\n          yamlId\n          fields {\n            slug\n          }\n          title\n          description_th\n          passed\n          vote_date\n        }\n      }\n    }\n    allPeopleVoteYaml {\n      edges {\n        node {\n          yamlId\n          votelog {\n            key\n            value\n          }\n        }\n      }\n    }\n  }\n`\n\nconst cssH1 = {\n  fontSize: \"4rem\",\n}\n\nconst cssSection = {\n  paddingTop: \"3rem\",\n  paddingBottom: \"8rem\",\n  h2: {\n    fontSize: \"4.8rem\",\n    textAlign: \"center\",\n  },\n}\n\nconst cssEngTitle = {\n  fontSize: \"2.4rem\",\n  textAlign: \"left\",\n  margin: \"1.5rem 0 1.2rem 0\",\n}\n\nconst cssPageP = {}\n\nconst cssBarChart = {\n  margin: \"1rem 0\",\n}\n\nconst cssStickyContainer = {\n  position: \"sticky\",\n  top: 0,\n  zIndex: 10,\n  padding: \"unset\",\n}\n\nconst cssStickyMenu = {\n  color: \"var(--cl-black)\",\n  width: \"50%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"1.5rem 0\",\n  cursor: \"pointer\",\n  \"span.anticon\": {\n    \"&.rotate-180\": {\n      transform: \"rotate(180deg)\",\n      transition: \"0.15s ease\",\n    },\n  },\n}\n\nconst cssStickyMenuTitle = {\n  fontWeight: \"bold\",\n  fontSize: \"2rem\",\n  marginLeft: \"1rem\",\n}\n\nconst PartyPage = props => {\n  const { party, ...data } = props.data\n\n  const [memberFilter, setMemberFilter] = useState({})\n  const [members] = useState(data.allPeopleYaml.edges.map(e => e.node))\n  const selectMemberFilter = filter => () => setMemberFilter(filter)\n\n  const [voteLogsArrow, setVoteLogsArrow] = useState({})\n  const [membersArrow, setMembersArrow] = useState({})\n  const [voteLogsRotate, setVoteLogsRotate] = useState({})\n  const [membersRotate, setMembersRotate] = useState({})\n  const navRef = useRef(null)\n  const voteLogsRef = useRef(null)\n  const membersRef = useRef(null)\n\n  useEffect(() => {\n    const navHeight = navRef.current?.offsetHeight || 0\n    const topOfVoteLogs = (voteLogsRef.current?.offsetTop || 0) - navHeight\n    const bottomOfVoteLogs =\n      topOfVoteLogs + (voteLogsRef.current?.offsetHeight || 0)\n    const topOfMembers = (membersRef.current?.offsetTop || 0) - navHeight\n    const bottomOfMembers =\n      topOfMembers + (membersRef.current?.offsetHeight || 0)\n\n    document.addEventListener(\"scroll\", e => {\n      const scrollTop = document.documentElement.scrollTop\n\n      const isFocusOnVoteLogs =\n        scrollTop >= topOfVoteLogs && scrollTop < bottomOfVoteLogs\n      setVoteLogsArrow(!isFocusOnVoteLogs)\n      setVoteLogsRotate(scrollTop >= bottomOfVoteLogs)\n\n      const isFocusOnMembers =\n        scrollTop >= topOfMembers && scrollTop < bottomOfMembers\n      setMembersArrow(!isFocusOnMembers)\n      setMembersRotate(scrollTop >= bottomOfMembers)\n    })\n  })\n\n  const countMembers = filter => {\n    // filter member by mp_type\n    let selectedMembers = members.filter(\n      member => !filter.mp_type || member.mp_type === filter.mp_type\n    )\n    return selectedMembers.length\n  }\n  const getSortedMembers = () => {\n    // filter party member by mp_type\n    let selectedMembers = members.filter(\n      member => !memberFilter.mp_type || member.mp_type === memberFilter.mp_type\n    )\n    if (memberFilter.mp_type === \"บัญชีรายชื่อ\") {\n      // sort by party list\n      selectedMembers.sort((a, b) => a.mp_list - b.mp_list)\n    } else if (memberFilter.mp_type === \"แบ่งเขต\") {\n      // sort by province and zone\n      selectedMembers.sort((a, b) =>\n        a.mp_province === b.mp_province\n          ? a.mp_zone - b.mp_zone\n          : a.mp_province.localeCompare(b.mp_province, \"th\")\n      )\n    } else {\n      // sort by name and lastname\n      selectedMembers.sort((a, b) =>\n        a.name === b.name\n          ? a.lastname.localeCompare(b.lastname, \"th\")\n          : a.name.localeCompare(b.name, \"th\")\n      )\n    }\n    return selectedMembers\n  }\n\n  const tabList = [\n    {\n      id: \"ทั้งหมด\",\n      label: \"ทั้งหมด\",\n      count: countMembers({}),\n      filter: {},\n      getClass: memberFilter => (!memberFilter.mp_type ? \"active\" : \"\"),\n    },\n    {\n      id: \"บัญชีรายชื่อ\",\n      label: \"บัญชีรายชื่อ\",\n      count: countMembers({ mp_type: \"บัญชีรายชื่อ\" }),\n      filter: { mp_type: \"บัญชีรายชื่อ\" },\n      getClass: memberFilter =>\n        memberFilter.mp_type === \"บัญชีรายชื่อ\" ? \"active\" : \"\",\n    },\n    {\n      id: \"แบ่งเขต\",\n      label: \"แบ่งเขต\",\n      count: countMembers({ mp_type: \"แบ่งเขต\" }),\n      filter: { mp_type: \"แบ่งเขต\" },\n      getClass: memberFilter =>\n        memberFilter.mp_type === \"แบ่งเขต\" ? \"active\" : \"\",\n    },\n  ]\n\n  const {\n    mp_type,\n    gender,\n    age,\n    education,\n    occupation_group,\n    asset,\n  } = loadCategoryStats(data)\n\n  const keyMembers = _.compact(\n    [\n      {\n        name: \"party_leader\",\n        label: \"หัวหน้าพรรค\",\n      },\n      {\n        name: \"party_secretary\",\n        label: \"เลขาธิการพรรค\",\n      },\n    ].map((keyPos, id) => {\n      if (!party[keyPos.name]) return null\n      const nameParts = party[keyPos.name].split(\" \").slice(1)\n      const slug = peopleSlug(nameParts.join(\" \"))\n      const name = nameParts[0]\n      const lastname = nameParts.slice(1).join(\" \")\n      const position = keyPos.label\n      return { id, name, lastname, position, fields: { slug } }\n    })\n  )\n\n  const showingMembers = getSortedMembers()\n\n  const votelogs = joinPeopleVotelog(\n    data.allPeopleYaml,\n    data.allPeopleVoteYaml,\n    data.allVotelogYaml\n  )\n\n  return (\n    <Layout pageStyles={{ background: party.color }}>\n      <Seo title={`พรรค${party.name}`} imageUrl=\"/seo/share/party.png\" />\n      <section className=\"section\">\n        <div className=\"book\">\n          <div className=\"page leftPage\">\n            <h1 css={{ ...cssH1, margin: \"1rem 0 0 0\" }}>พรรค{party.name}</h1>\n            <h2 style={{ ...cssEngTitle }}>{party.en.name} Party</h2>\n            <h2 style={{ ...cssEngTitle }}>About</h2>\n            <p css={{ ...cssPageP }}>{party.description}</p>\n            <h2 css={{ ...cssEngTitle }}>Official Link</h2>\n            <OfficialWebsite {...party}></OfficialWebsite>\n            <h2 css={{ ...cssEngTitle }}>In Office</h2>\n            <InOfficeDate {...party}></InOfficeDate>\n            <h2 style={{ ...cssEngTitle }}>Key Members</h2>\n            {keyMembers.map(x => {\n              return (\n                <div className=\"peopleCard\" key={x.id}>\n                  <PeopleCardMini key={x.id} {...x} />\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"page\">\n            <h2\n              style={{\n                ...cssEngTitle,\n                marginTop: \"11.1rem\",\n                marginBottom: \"0rem\",\n              }}\n            >\n              Members\n            </h2>\n            <h2\n              style={{\n                ...cssEngTitle,\n                fontFamily: \"var(--ff-text)\",\n                fontWeight: \"normal\",\n              }}\n            >\n              สมาชิกสภาผู้แทนราษฎรจำนวน {data.allPeopleYaml.totalCount} คน\n            </h2>\n            <div css={{ width: \"100%\" }}>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={mp_type}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={gender}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={age}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={education}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={occupation_group}></StackedBarChart>\n              </div>\n              <div style={{ ...cssBarChart }}>\n                <StackedBarChart data={asset}></StackedBarChart>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section\n        css={{\n          ...cssSection,\n          ...cssStickyContainer,\n          background: \"var(--cl-white)\",\n        }}\n      >\n        <div\n          ref={navRef}\n          css={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <a href=\"#voteLogs\" css={{ ...cssStickyMenu }}>\n            {voteLogsArrow ? (\n              <ArrowDownOutlined\n                className={voteLogsRotate ? \"rotate-180\" : \"\"}\n                css={{ fontSize: \"2rem\" }}\n              />\n            ) : (\n              <div\n                css={{\n                  width: \"2rem\",\n                  height: \"2rem\",\n                }}\n              />\n            )}\n            <span css={{ ...cssStickyMenuTitle }}>การลงมติล่าสุดของพรรค</span>\n          </a>\n          <a href=\"#members\" css={{ ...cssStickyMenu, background: \"#EEEEEE\" }}>\n            {membersArrow ? (\n              <ArrowDownOutlined\n                className={membersRotate ? \"rotate-180\" : \"\"}\n                css={{ fontSize: \"2rem\" }}\n              />\n            ) : (\n              <div\n                css={{\n                  width: \"2rem\",\n                  height: \"2rem\",\n                }}\n              />\n            )}\n            <span css={{ ...cssStickyMenuTitle }}>สมาชิกพรรคในสภา</span>\n          </a>\n        </div>\n      </section>\n\n      {votelogs.length > 0 ? (\n        <section\n          id=\"voteLogs\"\n          ref={voteLogsRef}\n          css={{ ...cssSection, background: \"var(--cl-white)\" }}\n        >\n          <div className=\"container\">\n            <h2 css={{ ...cssH1, paddingTop: \"6rem\" }}>\n              การลงมติล่าสุดของพรรค\n            </h2>\n            <div\n              css={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                flexWrap: \"wrap\",\n                marginTop: \"6rem\",\n              }}\n            >\n              {votelogs.map(({ yamlId, fields, ...voteLog }) => (\n                <VoteLogCard\n                  isCompact\n                  key={yamlId}\n                  css={{\n                    width: `calc((var(--container-width) - 4rem) / 2)`,\n                    margin: \"0 1rem 2rem 1rem\",\n                  }}\n                  slug={fields.slug}\n                  {...voteLog}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n      ) : null}\n\n      <section\n        id=\"members\"\n        ref={membersRef}\n        css={{ ...cssSection, background: \"#eeeeee\" }}\n      >\n        <div className=\"container\">\n          <h2\n            css={{\n              fontSize: \"4.8rem\",\n              textAlign: \"center\",\n              paddingTop: \"6rem\",\n            }}\n          >\n            สมาชิกพรรคในสภา\n          </h2>\n          <div\n            css={{\n              display: \"block\",\n              listStyle: \"none\",\n              textAlign: \"center\",\n              marginBottom: \"2.4rem\",\n              \"> button\": {\n                display: \"inline-block\",\n                fontSize: \"2.4rem\",\n                padding: \"1rem 0 0\",\n                margin: \"0 1rem\",\n                cursor: \"pointer\",\n                background: \"transparent\",\n                border: \"none\",\n                lineHeight: 1.5,\n                \"&.active\": {\n                  borderBottom: \"8px solid var(--cl-black)\",\n                },\n              },\n            }}\n            role=\"tablist\"\n          >\n            {tabList.map(tab => (\n              <button\n                type=\"button\"\n                key={tab.id}\n                className={[tab.getClass(memberFilter)].join(\" \")}\n                role=\"tab\"\n                onClick={selectMemberFilter(tab.filter)}\n              >\n                {tab.label} ({tab.count})\n              </button>\n            ))}\n          </div>\n          {showingMembers.length > 0 ? (\n            <div\n              css={{\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              {showingMembers.map((member, index) => (\n                <PeopleCard key={member.id} {...member} type=\"mp\"></PeopleCard>\n              ))}\n            </div>\n          ) : (\n            <div\n              css={{\n                fontFamily: \"var(--ff-title)\",\n                fontSize: \"3.2rem\",\n                textAlign: \"center\",\n                margin: \"6rem 0\",\n              }}\n            >\n              ไม่มีสมาชิก\n            </div>\n          )}\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default PartyPage\n"],"names":["cssH1","fontSize","cssSection","paddingTop","paddingBottom","h2","textAlign","cssEngTitle","margin","cssPageP","cssBarChart","cssStickyContainer","position","top","zIndex","padding","cssStickyMenu","color","width","display","justifyContent","alignItems","cursor","transform","transition","cssStickyMenuTitle","fontWeight","marginLeft","props","party","data","memberFilter","setMemberFilter","useState","members","allPeopleYaml","edges","map","e","node","voteLogsArrow","setVoteLogsArrow","membersArrow","setMembersArrow","voteLogsRotate","setVoteLogsRotate","membersRotate","setMembersRotate","navRef","useRef","voteLogsRef","membersRef","useEffect","navHeight","current","offsetHeight","topOfVoteLogs","offsetTop","bottomOfVoteLogs","topOfMembers","bottomOfMembers","document","addEventListener","scrollTop","documentElement","countMembers","filter","member","mp_type","length","tabList","id","label","count","getClass","gender","age","education","occupation_group","asset","loadCategoryStats","keyMembers","name","keyPos","nameParts","split","slice","slug","peopleSlug","join","lastname","fields","showingMembers","selectedMembers","sort","a","b","mp_list","mp_province","mp_zone","localeCompare","getSortedMembers","votelogs","joinPeopleVotelog","allPeopleVoteYaml","allVotelogYaml","pageStyles","background","title","imageUrl","className","css","style","en","description","x","key","marginTop","marginBottom","fontFamily","totalCount","ref","href","yamlId","voteLog","isCompact","role","tab","type","onClick","index"],"sourceRoot":""}