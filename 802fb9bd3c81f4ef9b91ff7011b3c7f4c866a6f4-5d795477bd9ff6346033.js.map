{"version":3,"file":"802fb9bd3c81f4ef9b91ff7011b3c7f4c866a6f4-5d795477bd9ff6346033.js","mappings":"iKAwCA,IApCqB,IAA6C,IAAD,MAA3C,MAAEA,EAAQ,GAAE,KAAEC,EAAI,SAAEC,EAAQ,OAAEC,GAAQ,EAC1D,MAAM,iBAAEC,IAAqBC,EAAAA,EAAAA,gBAAe,cAYtCC,EAAMN,EAAWA,EAAK,IAAIC,EAAI,IAAIC,EAAgBD,EAAI,IAAIC,EAEzC,IAAD,EAAtB,OAAIC,SAAW,QAAL,EAANA,EAAS,UAAE,OAAX,EAAaI,KAEb,eACEC,IAAc,QAAX,EAAEL,EAAO,UAAE,aAAT,EAAWI,IAChBD,IAAKA,EACLG,MAAO,CAAEC,cAAe,OAAQC,OAAQ,MAM5C,eAAKC,UAAU,WACb,QAAC,EAAAC,EAAW,CACVC,MAAOV,EAAiBW,gBAAgBC,gBACxCV,IAAKA,EACLG,MAAO,CAAEC,cAAe,UAEtB,C,sDClC+B,4dAElC,MAAMO,EAAiBC,IAC5B,IAAIN,EAAY,kBAKhB,OAJKM,EAAMC,YACTP,GAAa,eAIb,eACEA,UAAWA,EACXQ,IAAG,IAwBH,QAAC,IAAiBF,GAEhBA,EAAMC,UAcJ,MAbF,eACEC,IAAG,IASH,oBAAM,WACN,oBAAM,YAGN,EAIJC,EAAU,CACdC,WAAY,kBACZC,SAAU,SACVC,WAAY,IACZC,aAAc,UAqDVC,EAAmB,CACvBH,SAAU,SACVD,WAAY,kBAcb,gUAiDD,IA/CmB,IAAyB,IACtCK,GADc,KAAEC,KAASV,GAAO,EAUpC,MARa,OAATU,GAAiBV,EAAMW,MACzBF,EAvEW,SAAC,MACd3B,EAAK,KACLC,EAAI,SACJC,EAAQ,QACR4B,EAAO,QACPC,EAAO,YACPC,EAAW,QACXC,EAAO,MACPC,EAAK,qBACLC,GACD,SACC,eAAKvB,UAAU,cACb,eACEA,UAAU,YACVQ,IAAKC,GACFrB,EAAK,IAAIC,EAAI,IAAIC,IACtB,eAAKU,UAAU,oBACA,iBAAZkB,EACG,QAAQA,GAAaC,EAAO,aAAgBA,EAAO,IAAQ,QACnDD,EAAO,WAAWE,EAAW,QAAQC,EAAW,IAAI,OAC5D,GAAIC,IAETC,aAAoB,EAApBA,EAAsBC,QAAO,QAAC,MAAEF,GAAO,SAAkB,OAAbA,EAAMG,EAAW,IAAEC,QAC9D,IACA,oBACE,gBACE7B,MAAO,CACL8B,gBAAiB,UACjBC,aAAc,IACdC,QAAS,UACTlB,SAAU,KAEb,gBAKD,EAkCSmB,CAAOxB,GACF,YAATU,GAAsBV,EAAMyB,WACrChB,EAjCgBT,KAClB,eAAKN,UAAU,cACb,eACEA,UAAU,YACVQ,IAAKC,GACFH,EAAMlB,MAAK,IAAIkB,EAAMjB,KAAI,IAAIiB,EAAMhB,WACxC,eAAKU,UAAU,oBAAmB,kBA2BrBgC,CAAY1B,IACP,YAATU,GAAsBV,EAAM2B,cACrClB,EApBgBT,KAClB,eAAKN,UAAU,cACb,eACEA,UAAU,YACVQ,IAAKC,GACFH,EAAMlB,MAAK,IAAIkB,EAAMjB,KAAI,IAAIiB,EAAMhB,WACxC,eAAKU,UAAU,mBAAmBQ,IAAKM,GACpCR,EAAM4B,kBAER5B,EAAMgB,OAAQ,eAAKd,IAAKM,GAAkB,OAAKR,EAAMgB,OAAe,MAWxDa,CAAY7B,KAIzB,aACE8B,OAAO,SACPC,IAAI,+BACJC,KAAMhC,EAAMiC,OAAOC,KACnBC,IAAKnC,EAAMmB,GACXzB,UAAWM,EAAMN,UACjBQ,IAAG,EAcHX,MAAO,IAAMS,EAAMT,OAAS,CAAC,KAE7B,QAACQ,EAAmBC,IACpB,eACEE,IAAG,GAMFO,GAED,C","sources":["webpack://they-work-for-us/./src/components/peopleAvatar.js","webpack://they-work-for-us/./src/components/peopleCard.js"],"sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst PeopleAvatar = ({ title = \"\", name, lastname, images }) => {\n  const { placeholderImage } = useStaticQuery(graphql`\n    {\n      placeholderImage: file(\n        relativePath: { eq: \"images/people/placeholder.png\" }\n      ) {\n        childImageSharp {\n          gatsbyImageData(width: 160)\n        }\n      }\n    }\n  `)\n\n  const alt = title ? `${title} ${name} ${lastname}` : `${name} ${lastname}`\n\n  if (images?.[0]?.url) {\n    return (\n      <img\n        src={images[0]?.url}\n        alt={alt}\n        style={{ pointerEvents: \"none\", margin: 0 }}\n      />\n    )\n  }\n\n  return (\n    <div className=\"avatar\">\n      <GatsbyImage\n        image={placeholderImage.childImageSharp.gatsbyImageData}\n        alt={alt}\n        style={{ pointerEvents: \"none\" }}\n      />\n    </div>\n  )\n}\n\nexport default PeopleAvatar\n","import React from \"react\"\nimport { media } from \"../styles\"\nimport PeopleAvatar from \"./peopleAvatar\"\n\nexport const ProfilePicture = props => {\n  let className = \"profile-picture\"\n  if (!props.is_active) {\n    className += \" in-active\"\n  }\n\n  return (\n    <div\n      className={className}\n      css={{\n        flex: \"0 0 84px\",\n        borderRadius: 84,\n        width: 84,\n        height: 84,\n        marginBottom: 0,\n        marginRight: \"2rem\",\n        border: \"2px solid var(--cl-black)\",\n        background: \"var(--cl-gray-2) no-repeat\",\n        overflow: \"hidden\",\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        \"&.in-active\": {\n          \"> .avatar\": {\n            opacity: 0.5,\n          },\n          \"> img\": {\n            opacity: 0.5,\n          },\n        },\n      }}\n    >\n      <PeopleAvatar {...props} />\n\n      {!props.is_active ? (\n        <div\n          css={{\n            position: \"absolute\",\n            display: \"flex\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            color: \"var(--cl-white)\",\n            fontSize: \"1.2rem\",\n          }}\n        >\n          <span>พ้นจาก</span>\n          <span>ตำแหน่ง</span>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst cssName = {\n  fontFamily: \"var(--ff-title)\",\n  fontSize: \"2.4rem\",\n  lineHeight: 1.2,\n  marginBottom: \"0.5rem\",\n}\n\nconst MPInfo = ({\n  title,\n  name,\n  lastname,\n  mp_type,\n  mp_list,\n  mp_province,\n  mp_zone,\n  party,\n  people_party_history,\n}) => (\n  <div className=\"card-info\">\n    <div\n      className=\"card-name\"\n      css={cssName}\n    >{`${title} ${name} ${lastname}`}</div>\n    <div className=\"card-description\">\n      {mp_type === \"บัญชีรายชื่อ\"\n        ? `ส.ส. ${mp_type}` + (mp_list ? ` ลำดับที่ ${mp_list}` : ``)\n        : `ส.ส. ${mp_type} จังหวัด${mp_province} เขต ${mp_zone}`}{\" \"}\n      พรรค{`${party}`}\n    </div>\n    {people_party_history?.filter(({ party }) => party.id !== null).length >\n      1 && (\n      <div>\n        <span\n          style={{\n            backgroundColor: \"#FEE5F2\",\n            borderRadius: 100,\n            padding: \"2px 6px\",\n            fontSize: 14,\n          }}\n        >\n          เคยย้ายพรรค\n        </span>\n      </div>\n    )}\n  </div>\n)\n\nconst SenatorInfo = props => (\n  <div className=\"card-info\">\n    <div\n      className=\"card-name\"\n      css={cssName}\n    >{`${props.title} ${props.name} ${props.lastname}`}</div>\n    <div className=\"card-description\">สมาชิกวุฒิสภา</div>\n  </div>\n)\n\nconst memberDetailsCss = {\n  fontSize: \"1.8rem\",\n  fontFamily: \"var(--ff-text)\",\n}\n\nconst CabinetInfo = props => (\n  <div className=\"card-info\">\n    <div\n      className=\"card-name\"\n      css={cssName}\n    >{`${props.title} ${props.name} ${props.lastname}`}</div>\n    <div className=\"card-description\" css={memberDetailsCss}>\n      {props.cabinet_position}\n    </div>\n    {props.party ? <div css={memberDetailsCss}>พรรค{props.party}</div> : null}\n  </div>\n)\n\nconst PeopleCard = ({ type, ...props }) => {\n  let peopleInfo\n  if (type === \"mp\" || props.is_mp) {\n    peopleInfo = MPInfo(props)\n  } else if (type === \"senator\" || props.is_senator) {\n    peopleInfo = SenatorInfo(props)\n  } else if (type === \"cabinet\" || props.is_cabinet) {\n    peopleInfo = CabinetInfo(props)\n  }\n\n  return (\n    <a\n      target=\"_blank\"\n      rel=\"noreferrer nofollow noopener\"\n      href={props.fields.slug}\n      key={props.id}\n      className={props.className}\n      css={{\n        display: \"flex\",\n        flex: \"0 1 455px\",\n        padding: \"4rem\",\n        paddingRight: \"2rem\",\n        border: \"1px solid var(--cl-gray-2)\",\n        borderRadius: \"1rem\",\n        background: \"var(--cl-white)\",\n        fontSize: \"1.8rem\",\n        color: \"inherit\",\n        \"&:hover\": {\n          textDecoration: \"none\",\n        },\n      }}\n      style={{ ...(props.style || {}) }}\n    >\n      <ProfilePicture {...props}></ProfilePicture>\n      <div\n        css={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        {peopleInfo}\n      </div>\n    </a>\n  )\n}\n\nexport default PeopleCard\n"],"names":["title","name","lastname","images","placeholderImage","useStaticQuery","alt","url","src","style","pointerEvents","margin","className","G","image","childImageSharp","gatsbyImageData","ProfilePicture","props","is_active","css","cssName","fontFamily","fontSize","lineHeight","marginBottom","memberDetailsCss","peopleInfo","type","is_mp","mp_type","mp_list","mp_province","mp_zone","party","people_party_history","filter","id","length","backgroundColor","borderRadius","padding","MPInfo","is_senator","SenatorInfo","is_cabinet","cabinet_position","CabinetInfo","target","rel","href","fields","slug","key"],"sourceRoot":""}